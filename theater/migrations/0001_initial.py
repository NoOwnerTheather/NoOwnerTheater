# Generated by Django 3.2.12 on 2022-02-12 01:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=20, verbose_name='닉네임')),
                ('phone', models.CharField(max_length=20, verbose_name='휴대폰 번호')),
                ('type', models.CharField(choices=[('일반 사용자', '일반 사용자'), ('제작사', '제작사')], max_length=20, verbose_name='가입 유형')),
                ('mileage', models.IntegerField(default=0, verbose_name='마일리지')),
                ('gender', models.CharField(choices=[('남자', '남자'), ('여자', '여자')], max_length=20, verbose_name='성별')),
                ('user_img', models.FileField(default='imgs/3.PNG', upload_to='', verbose_name='유저사진')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='제목')),
                ('genre', models.CharField(choices=[('코미디', '코미디'), ('드라마', '드라마'), ('범죄', '범죄'), ('공포(호러)', '공포(호러)'), ('SF', 'SF'), ('판타지', '판타지'), ('다큐멘터리', '다큐멘터리'), ('뮤지컬', '뮤지컬'), ('성인물(에로)', '성인물(에로)'), ('사극', '사극'), ('미스터리', '미스터리'), ('가족', '가족'), ('액션', '액션'), ('멜로/로맨스', '멜로/로맨스'), ('전쟁', '전쟁'), ('스릴러', '스릴러'), ('애니메이션', '애니메이션')], max_length=100, verbose_name='장르')),
                ('running_time', models.IntegerField(null=True, verbose_name='러닝타임')),
                ('release_date', models.DateField(verbose_name='개봉')),
                ('director', models.CharField(max_length=50, verbose_name='감독')),
                ('actor', models.CharField(max_length=100, verbose_name='배우')),
                ('content', models.TextField(null=True, verbose_name='개요')),
                ('rating', models.FloatField(default=0, verbose_name='평점')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='poster/', verbose_name='포스터')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/', verbose_name='예고편')),
                ('url', models.URLField(null=True, verbose_name='링크')),
                ('comeout', models.CharField(choices=[('미개봉 및 제작중', '미개봉 및 제작중'), ('개봉', '개봉')], max_length=100, verbose_name='개봉여부')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='한 줄 제목')),
                ('content', models.TextField(verbose_name='내용')),
                ('rating', models.IntegerField(verbose_name='평점')),
                ('like', models.IntegerField(default=0, verbose_name='좋아요')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='theater.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='내용')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='theater.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentPreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='내용')),
                ('like', models.IntegerField(default=0, verbose_name='좋아요')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='theater.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='제목')),
                ('content', models.TextField(verbose_name='내용')),
                ('hits', models.IntegerField(default=0, verbose_name='조회수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('image', models.ImageField(blank=True, null=True, upload_to='poster/', verbose_name='이미지')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
